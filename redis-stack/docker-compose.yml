# Centralized Redis Stack for Multiple Applications
version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: shared_redis
    restart: always
    ports:
      - "6379:6379"  # Expose to host for local development
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - shared_services
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis_commander
    restart: always
    environment:
      - REDIS_HOSTS=local:redis:6379:0,flight_tracker:redis:6379:0,app2:redis:6379:1,app3:redis:6379:2
      - HTTP_USER=${REDIS_COMMANDER_USER:-admin}
      - HTTP_PASSWORD=${REDIS_COMMANDER_PASSWORD:-admin}
    ports:
      - "8081:8081"
    networks:
      - shared_services
    depends_on:
      - redis
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  redis_data:
    external: true  # Create with: docker volume create redis_data

networks:
  shared_services:
    external: true  # Create with: docker network create shared_services